{"ast":null,"code":"/*\n  Corpus class specific for MaxEnt modeling\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n'use strict';\n\nvar util = require('util');\n\nvar Sample = require('../Sample');\n\nvar Corpus = require('../../../brill_pos_tagger/lib/Corpus');\n\nfunction MECorpus(data, BROWN, SentenceClass) {\n  MECorpus.super_.call(this, data, BROWN, SentenceClass);\n}\n\nutil.inherits(MECorpus, Corpus);\n\nMECorpus.prototype.generateSample = function () {\n  var sample = new Sample([]);\n  this.sentences.forEach(function (sentence) {\n    sentence.generateSampleElements(sample);\n  });\n  return sample;\n}; // Splits the corpus in a training and testing set.\n// percentageTrain is the size of the training corpus in percent\n// Returns an array with two elements: training corpus, testing corpus\n\n\nMECorpus.prototype.splitInTrainAndTest = function (percentageTrain) {\n  var corpusTrain = new MECorpus();\n  var corpusTest = new MECorpus();\n  var p = percentageTrain / 100;\n  this.sentences.forEach(function (sentence, i) {\n    if (Math.random() < p) {\n      corpusTrain.sentences.push(sentence);\n    } else {\n      corpusTest.sentences.push(sentence);\n    }\n  });\n  return [corpusTrain, corpusTest];\n};\n\nmodule.exports = MECorpus;","map":{"version":3,"sources":["C:/CodingProjects/ABCspelet/node_modules/natural/lib/natural/classifiers/maxent/POS/ME_Corpus.js"],"names":["util","require","Sample","Corpus","MECorpus","data","BROWN","SentenceClass","super_","call","inherits","prototype","generateSample","sample","sentences","forEach","sentence","generateSampleElements","splitInTrainAndTest","percentageTrain","corpusTrain","corpusTest","p","i","Math","random","push","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,sCAAD,CAAtB;;AAEA,SAASG,QAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+C;AAC7CH,EAAAA,QAAQ,CAACI,MAAT,CAAgBC,IAAhB,CAAqB,IAArB,EAA2BJ,IAA3B,EAAiCC,KAAjC,EAAwCC,aAAxC;AACD;;AAEDP,IAAI,CAACU,QAAL,CAAcN,QAAd,EAAwBD,MAAxB;;AAEAC,QAAQ,CAACO,SAAT,CAAmBC,cAAnB,GAAoC,YAAY;AAC9C,MAAMC,MAAM,GAAG,IAAIX,MAAJ,CAAW,EAAX,CAAf;AACA,OAAKY,SAAL,CAAeC,OAAf,CAAuB,UAAUC,QAAV,EAAoB;AACzCA,IAAAA,QAAQ,CAACC,sBAAT,CAAgCJ,MAAhC;AACD,GAFD;AAGA,SAAOA,MAAP;AACD,CAND,C,CAQA;AACA;AACA;;;AACAT,QAAQ,CAACO,SAAT,CAAmBO,mBAAnB,GAAyC,UAAUC,eAAV,EAA2B;AAClE,MAAMC,WAAW,GAAG,IAAIhB,QAAJ,EAApB;AACA,MAAMiB,UAAU,GAAG,IAAIjB,QAAJ,EAAnB;AAEA,MAAMkB,CAAC,GAAGH,eAAe,GAAG,GAA5B;AACA,OAAKL,SAAL,CAAeC,OAAf,CAAuB,UAAUC,QAAV,EAAoBO,CAApB,EAAuB;AAC5C,QAAIC,IAAI,CAACC,MAAL,KAAgBH,CAApB,EAAuB;AACrBF,MAAAA,WAAW,CAACN,SAAZ,CAAsBY,IAAtB,CAA2BV,QAA3B;AACD,KAFD,MAEO;AACLK,MAAAA,UAAU,CAACP,SAAX,CAAqBY,IAArB,CAA0BV,QAA1B;AACD;AACF,GAND;AAOA,SAAO,CAACI,WAAD,EAAcC,UAAd,CAAP;AACD,CAbD;;AAeAM,MAAM,CAACC,OAAP,GAAiBxB,QAAjB","sourcesContent":["/*\n  Corpus class specific for MaxEnt modeling\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n'use strict'\n\nconst util = require('util')\nconst Sample = require('../Sample')\nconst Corpus = require('../../../brill_pos_tagger/lib/Corpus')\n\nfunction MECorpus (data, BROWN, SentenceClass) {\n  MECorpus.super_.call(this, data, BROWN, SentenceClass)\n}\n\nutil.inherits(MECorpus, Corpus)\n\nMECorpus.prototype.generateSample = function () {\n  const sample = new Sample([])\n  this.sentences.forEach(function (sentence) {\n    sentence.generateSampleElements(sample)\n  })\n  return sample\n}\n\n// Splits the corpus in a training and testing set.\n// percentageTrain is the size of the training corpus in percent\n// Returns an array with two elements: training corpus, testing corpus\nMECorpus.prototype.splitInTrainAndTest = function (percentageTrain) {\n  const corpusTrain = new MECorpus()\n  const corpusTest = new MECorpus()\n\n  const p = percentageTrain / 100\n  this.sentences.forEach(function (sentence, i) {\n    if (Math.random() < p) {\n      corpusTrain.sentences.push(sentence)\n    } else {\n      corpusTest.sentences.push(sentence)\n    }\n  })\n  return [corpusTrain, corpusTest]\n}\n\nmodule.exports = MECorpus\n"]},"metadata":{},"sourceType":"script"}