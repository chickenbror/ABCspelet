{"ast":null,"code":"/*\nCopyright (c) 2017, Dogan Yazar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n'use strict';\n\nvar Stemmer = require('./stemmer_sv'); // Get R1 region\n\n\nfunction getRegions(str) {\n  var match = str.match(/[aeiouyäåö][^aeiouyäåö]([a-zåäö]+)/);\n  var r1 = '';\n\n  if (match && match[1]) {\n    r1 = match[1];\n\n    if (match.index + 2 < 3) {\n      // Not clear why we need this! Algorithm does not describe this part!\n      r1 = str.slice(3);\n    }\n  }\n\n  return {\n    r1: r1,\n    rest: str.slice(0, str.length - r1.length)\n  };\n}\n\nfunction step1a(str) {\n  var regions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getRegions(str);\n  var r1 = regions.r1;\n\n  if (!r1) {\n    return str;\n  }\n\n  var regEx = /(heterna|hetens|anden|andes|andet|arens|arnas|ernas|heten|heter|ornas|ande|ades|aren|arna|arne|aste|erna|erns|orna|ade|are|ast|ens|ern|het|ad|ar|as|at|en|er|es|or|a|e)$/;\n  var match = r1.match(regEx);\n  return match ? regions.rest + r1.slice(0, match.index) : str;\n}\n\nfunction step1b(str) {\n  var regions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getRegions(str);\n\n  if (regions.r1 && str.match(/(b|c|d|f|g|h|j|k|l|m|n|o|p|r|t|v|y)s$/)) {\n    return str.slice(0, -1);\n  }\n\n  return str;\n}\n\nfunction step1(str) {\n  var regions = getRegions(str);\n  var resA = step1a(str, regions);\n  var resB = step1b(str, regions);\n  return resA.length < resB.length ? resA : resB;\n}\n\nfunction step2(str) {\n  var regions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getRegions(str);\n  var r1 = regions.r1;\n\n  if (r1 && r1.match(/(dd|gd|nn|dt|gt|kt|tt)$/)) {\n    return str.slice(0, -1);\n  }\n\n  return str;\n}\n\nfunction step3(str) {\n  var regions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getRegions(str);\n  var r1 = regions.r1;\n\n  if (r1) {\n    if (r1.match(/(lös|full)t$/)) {\n      return str.slice(0, -1);\n    }\n\n    var match = r1.match(/(lig|ig|els)$/);\n    return match ? regions.rest + r1.slice(0, match.index) : str;\n  }\n\n  return str;\n}\n\nfunction stem(_str) {\n  var str = _str.toLowerCase();\n\n  return step3(step2(step1(str)));\n}\n\nvar PorterStemmer = new Stemmer();\nmodule.exports = PorterStemmer; // perform full stemming algorithm on a single word\n\nPorterStemmer.stem = stem;","map":{"version":3,"sources":["C:/CodingProjects/ABCspelet/node_modules/natural/lib/natural/stemmers/porter_stemmer_sv.js"],"names":["Stemmer","require","getRegions","str","match","r1","index","slice","rest","length","step1a","regions","regEx","step1b","step1","resA","resB","step2","step3","stem","_str","toLowerCase","PorterStemmer","module","exports"],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2017, Dogan Yazar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n'use strict'\n\nconst Stemmer = require('./stemmer_sv')\n\n// Get R1 region\nfunction getRegions (str) {\n  const match = str.match(/[aeiouyäåö][^aeiouyäåö]([a-zåäö]+)/)\n  let r1 = ''\n  if (match && match[1]) {\n    r1 = match[1]\n    if (match.index + 2 < 3) { // Not clear why we need this! Algorithm does not describe this part!\n      r1 = str.slice(3)\n    }\n  }\n  return {\n    r1,\n    rest: str.slice(0, str.length - r1.length)\n  }\n}\n\nfunction step1a (str, regions = getRegions(str)) {\n  const r1 = regions.r1\n  if (!r1) {\n    return str\n  }\n\n  const regEx = /(heterna|hetens|anden|andes|andet|arens|arnas|ernas|heten|heter|ornas|ande|ades|aren|arna|arne|aste|erna|erns|orna|ade|are|ast|ens|ern|het|ad|ar|as|at|en|er|es|or|a|e)$/\n  const match = r1.match(regEx)\n  return match ? regions.rest + r1.slice(0, match.index) : str\n}\n\nfunction step1b (str, regions = getRegions(str)) {\n  if (regions.r1 && str.match(/(b|c|d|f|g|h|j|k|l|m|n|o|p|r|t|v|y)s$/)) {\n    return str.slice(0, -1)\n  }\n\n  return str\n}\n\nfunction step1 (str) {\n  const regions = getRegions(str)\n  const resA = step1a(str, regions)\n  const resB = step1b(str, regions)\n\n  return resA.length < resB.length ? resA : resB\n}\n\nfunction step2 (str, regions = getRegions(str)) {\n  const r1 = regions.r1\n  if (r1 && r1.match(/(dd|gd|nn|dt|gt|kt|tt)$/)) {\n    return str.slice(0, -1)\n  }\n  return str\n}\n\nfunction step3 (str, regions = getRegions(str)) {\n  const r1 = regions.r1\n  if (r1) {\n    if (r1.match(/(lös|full)t$/)) {\n      return str.slice(0, -1)\n    }\n\n    const match = r1.match(/(lig|ig|els)$/)\n    return match ? regions.rest + r1.slice(0, match.index) : str\n  }\n\n  return str\n}\n\nfunction stem (_str) {\n  const str = _str.toLowerCase()\n  return step3(step2(step1(str)))\n}\n\nconst PorterStemmer = new Stemmer()\nmodule.exports = PorterStemmer\n\n// perform full stemming algorithm on a single word\nPorterStemmer.stem = stem\n"]},"metadata":{},"sourceType":"script"}