{"ast":null,"code":"/*\n  Brill's POS Tagger\n  Copyright (C) 2019 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n'use strict';\n\nvar Sentence = require('./Sentence');\n\nvar DEBUG = false;\n\nfunction BrillPOSTagger(lexicon, ruleSet) {\n  this.lexicon = lexicon;\n  this.ruleSet = ruleSet;\n} // Tags a sentence, sentence is an array of words\n// Returns an array of tagged words; a tagged words is an array consisting of\n// the word itself followed by its lexical category\n\n\nBrillPOSTagger.prototype.tag = function (sentence) {\n  var taggedSentence = this.tagWithLexicon(sentence);\n  DEBUG && console.log(taggedSentence);\n  return this.applyRules(taggedSentence);\n};\n\nBrillPOSTagger.prototype.tagWithLexicon = function (sentence) {\n  var taggedSentence = new Sentence();\n  var that = this;\n  sentence.forEach(function (word, index) {\n    var categories = that.lexicon.tagWord(word);\n    taggedSentence.addTaggedWord(word, categories[0]);\n  });\n  return taggedSentence;\n}; // Applies the transformation rules to an initially tagged sentence.\n// taggedSentence is an array of tagged words.\n// A tagged word is an array consisting of the word itself followed by its lexical category.\n// Returns an array of tagged words as well\n\n\nBrillPOSTagger.prototype.applyRules = function (sentence) {\n  var _this = this;\n\n  var _loop = function _loop(i, size) {\n    _this.ruleSet.getRules().forEach(function (rule) {\n      rule.apply(sentence, i);\n    });\n  };\n\n  for (var i = 0, size = sentence.taggedWords.length; i < size; i++) {\n    _loop(i, size);\n  }\n\n  return sentence;\n};\n\nmodule.exports = BrillPOSTagger;","map":{"version":3,"sources":["C:/CodingProjects/ABCspelet/node_modules/natural/lib/natural/brill_pos_tagger/lib/Brill_POS_Tagger.js"],"names":["Sentence","require","DEBUG","BrillPOSTagger","lexicon","ruleSet","prototype","tag","sentence","taggedSentence","tagWithLexicon","console","log","applyRules","that","forEach","word","index","categories","tagWord","addTaggedWord","i","size","getRules","rule","apply","taggedWords","length","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAMC,KAAK,GAAG,KAAd;;AAEA,SAASC,cAAT,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2C;AACzC,OAAKD,OAAL,GAAeA,OAAf;AACA,OAAKC,OAAL,GAAeA,OAAf;AACD,C,CAED;AACA;AACA;;;AACAF,cAAc,CAACG,SAAf,CAAyBC,GAAzB,GAA+B,UAAUC,QAAV,EAAoB;AACjD,MAAMC,cAAc,GAAG,KAAKC,cAAL,CAAoBF,QAApB,CAAvB;AACAN,EAAAA,KAAK,IAAIS,OAAO,CAACC,GAAR,CAAYH,cAAZ,CAAT;AACA,SAAO,KAAKI,UAAL,CAAgBJ,cAAhB,CAAP;AACD,CAJD;;AAMAN,cAAc,CAACG,SAAf,CAAyBI,cAAzB,GAA0C,UAAUF,QAAV,EAAoB;AAC5D,MAAMC,cAAc,GAAG,IAAIT,QAAJ,EAAvB;AAEA,MAAMc,IAAI,GAAG,IAAb;AACAN,EAAAA,QAAQ,CAACO,OAAT,CAAiB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACtC,QAAMC,UAAU,GAAGJ,IAAI,CAACV,OAAL,CAAae,OAAb,CAAqBH,IAArB,CAAnB;AACAP,IAAAA,cAAc,CAACW,aAAf,CAA6BJ,IAA7B,EAAmCE,UAAU,CAAC,CAAD,CAA7C;AACD,GAHD;AAIA,SAAQT,cAAR;AACD,CATD,C,CAWA;AACA;AACA;AACA;;;AACAN,cAAc,CAACG,SAAf,CAAyBO,UAAzB,GAAsC,UAAUL,QAAV,EAAoB;AAAA;;AAAA,6BAC/Ca,CAD+C,EACxCC,IADwC;AAEtD,IAAA,KAAI,CAACjB,OAAL,CAAakB,QAAb,GAAwBR,OAAxB,CAAgC,UAAUS,IAAV,EAAgB;AAC9CA,MAAAA,IAAI,CAACC,KAAL,CAAWjB,QAAX,EAAqBa,CAArB;AACD,KAFD;AAFsD;;AACxD,OAAK,IAAIA,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGd,QAAQ,CAACkB,WAAT,CAAqBC,MAA5C,EAAoDN,CAAC,GAAGC,IAAxD,EAA8DD,CAAC,EAA/D,EAAmE;AAAA,UAA1DA,CAA0D,EAAnDC,IAAmD;AAIlE;;AACD,SAAOd,QAAP;AACD,CAPD;;AASAoB,MAAM,CAACC,OAAP,GAAiB1B,cAAjB","sourcesContent":["/*\n  Brill's POS Tagger\n  Copyright (C) 2019 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n'use strict'\n\nconst Sentence = require('./Sentence')\n\nconst DEBUG = false\n\nfunction BrillPOSTagger (lexicon, ruleSet) {\n  this.lexicon = lexicon\n  this.ruleSet = ruleSet\n}\n\n// Tags a sentence, sentence is an array of words\n// Returns an array of tagged words; a tagged words is an array consisting of\n// the word itself followed by its lexical category\nBrillPOSTagger.prototype.tag = function (sentence) {\n  const taggedSentence = this.tagWithLexicon(sentence)\n  DEBUG && console.log(taggedSentence)\n  return this.applyRules(taggedSentence)\n}\n\nBrillPOSTagger.prototype.tagWithLexicon = function (sentence) {\n  const taggedSentence = new Sentence()\n\n  const that = this\n  sentence.forEach(function (word, index) {\n    const categories = that.lexicon.tagWord(word)\n    taggedSentence.addTaggedWord(word, categories[0])\n  })\n  return (taggedSentence)\n}\n\n// Applies the transformation rules to an initially tagged sentence.\n// taggedSentence is an array of tagged words.\n// A tagged word is an array consisting of the word itself followed by its lexical category.\n// Returns an array of tagged words as well\nBrillPOSTagger.prototype.applyRules = function (sentence) {\n  for (let i = 0, size = sentence.taggedWords.length; i < size; i++) {\n    this.ruleSet.getRules().forEach(function (rule) {\n      rule.apply(sentence, i)\n    })\n  }\n  return sentence\n}\n\nmodule.exports = BrillPOSTagger\n"]},"metadata":{},"sourceType":"script"}