{"ast":null,"code":"/*\n  Simple Example Element class\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n'use strict';\n\nvar util = require('util');\n\nvar Element = require('../Element');\n\nvar Feature = require('../Feature');\n\nfunction SEElement(a, b) {\n  SEElement.super_.call(this, a, b);\n}\n\nutil.inherits(SEElement, Element);\n\nSEElement.prototype.generateFeatures = function (featureSet) {\n  function isZero(x) {\n    if (x.a === 'x' && x.b.data === '0') {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  featureSet.addFeature(new Feature(isZero, 'isZero', ['0']));\n\n  function isOne(x) {\n    if (x.a === 'y' && x.b.data === '1') {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  featureSet.addFeature(new Feature(isOne, 'isOne', ['1']));\n};\n\nmodule.exports = SEElement;","map":{"version":3,"sources":["C:/CodingProjects/ABCspelet/node_modules/natural/lib/natural/classifiers/maxent/SimpleExample/SE_Element.js"],"names":["util","require","Element","Feature","SEElement","a","b","super_","call","inherits","prototype","generateFeatures","featureSet","isZero","x","data","addFeature","isOne","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,YAAD,CAAvB;;AAEA,SAASG,SAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AACxBF,EAAAA,SAAS,CAACG,MAAV,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BH,CAA5B,EAA+BC,CAA/B;AACD;;AAEDN,IAAI,CAACS,QAAL,CAAcL,SAAd,EAAyBF,OAAzB;;AAEAE,SAAS,CAACM,SAAV,CAAoBC,gBAApB,GAAuC,UAAUC,UAAV,EAAsB;AAC3D,WAASC,MAAT,CAAiBC,CAAjB,EAAoB;AAClB,QAAKA,CAAC,CAACT,CAAF,KAAQ,GAAT,IAAkBS,CAAC,CAACR,CAAF,CAAIS,IAAJ,KAAa,GAAnC,EAAyC;AACvC,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD;;AACDH,EAAAA,UAAU,CAACI,UAAX,CAAsB,IAAIb,OAAJ,CAAYU,MAAZ,EAAoB,QAApB,EAA8B,CAAC,GAAD,CAA9B,CAAtB;;AAEA,WAASI,KAAT,CAAgBH,CAAhB,EAAmB;AACjB,QAAKA,CAAC,CAACT,CAAF,KAAQ,GAAT,IAAkBS,CAAC,CAACR,CAAF,CAAIS,IAAJ,KAAa,GAAnC,EAAyC;AACvC,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD;;AACDH,EAAAA,UAAU,CAACI,UAAX,CAAsB,IAAIb,OAAJ,CAAYc,KAAZ,EAAmB,OAAnB,EAA4B,CAAC,GAAD,CAA5B,CAAtB;AACD,CAhBD;;AAkBAC,MAAM,CAACC,OAAP,GAAiBf,SAAjB","sourcesContent":["/*\n  Simple Example Element class\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n'use strict'\n\nconst util = require('util')\n\nconst Element = require('../Element')\nconst Feature = require('../Feature')\n\nfunction SEElement (a, b) {\n  SEElement.super_.call(this, a, b)\n}\n\nutil.inherits(SEElement, Element)\n\nSEElement.prototype.generateFeatures = function (featureSet) {\n  function isZero (x) {\n    if ((x.a === 'x') && (x.b.data === '0')) {\n      return 1\n    }\n    return 0\n  }\n  featureSet.addFeature(new Feature(isZero, 'isZero', ['0']))\n\n  function isOne (x) {\n    if ((x.a === 'y') && (x.b.data === '1')) {\n      return 1\n    }\n    return 0\n  }\n  featureSet.addFeature(new Feature(isOne, 'isOne', ['1']))\n}\n\nmodule.exports = SEElement\n"]},"metadata":{},"sourceType":"script"}