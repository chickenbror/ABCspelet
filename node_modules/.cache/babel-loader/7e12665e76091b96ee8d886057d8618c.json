{"ast":null,"code":"/*\n  Predicates for the Brill tagger\n  Copyright (C) 2019 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n'use strict';\n\nvar DEBUG = false;\n\nvar predicates = require('./RuleTemplates');\n\nDEBUG && console.log('RuleSet loaded predicates: ' + predicates);\n\nfunction Predicate(name, parameter1, parameter2) {\n  this.name = name;\n  this.meta = predicates[name];\n\n  if (!this.meta) {\n    this.meta = predicates.DEFAULT;\n  } // if (this.meta.nrParameters > 0) {\n\n\n  this.parameter1 = parameter1; // }\n  // if (this.meta.nrParameters > 1) {\n\n  this.parameter2 = parameter2; // }\n\n  DEBUG && console.log('Predicate\\n' + JSON.toString(this.meta, null, 2));\n}\n\nPredicate.prototype.evaluate = function (sentence, position) {\n  DEBUG && console.log('Predicate.evalute: ' + this.name);\n  var predicate = this.meta.function;\n  return predicate(sentence, position, this.parameter1, this.parameter2);\n};\n\nmodule.exports = Predicate;","map":{"version":3,"sources":["C:/CodingProjects/ABCspelet/node_modules/natural/lib/natural/brill_pos_tagger/lib/Predicate.js"],"names":["DEBUG","predicates","require","console","log","Predicate","name","parameter1","parameter2","meta","DEFAULT","JSON","toString","prototype","evaluate","sentence","position","predicate","function","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAMA,KAAK,GAAG,KAAd;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AACAF,KAAK,IAAIG,OAAO,CAACC,GAAR,CAAY,gCAAgCH,UAA5C,CAAT;;AAEA,SAASI,SAAT,CAAoBC,IAApB,EAA0BC,UAA1B,EAAsCC,UAAtC,EAAkD;AAChD,OAAKF,IAAL,GAAYA,IAAZ;AACA,OAAKG,IAAL,GAAYR,UAAU,CAACK,IAAD,CAAtB;;AACA,MAAI,CAAC,KAAKG,IAAV,EAAgB;AACd,SAAKA,IAAL,GAAYR,UAAU,CAACS,OAAvB;AACD,GAL+C,CAMhD;;;AACA,OAAKH,UAAL,GAAkBA,UAAlB,CAPgD,CAQhD;AACA;;AACA,OAAKC,UAAL,GAAkBA,UAAlB,CAVgD,CAWhD;;AACAR,EAAAA,KAAK,IAAIG,OAAO,CAACC,GAAR,CAAY,gBAAgBO,IAAI,CAACC,QAAL,CAAc,KAAKH,IAAnB,EAAyB,IAAzB,EAA+B,CAA/B,CAA5B,CAAT;AACD;;AAEDJ,SAAS,CAACQ,SAAV,CAAoBC,QAApB,GAA+B,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAC3DhB,EAAAA,KAAK,IAAIG,OAAO,CAACC,GAAR,CAAY,wBAAwB,KAAKE,IAAzC,CAAT;AACA,MAAMW,SAAS,GAAG,KAAKR,IAAL,CAAUS,QAA5B;AACA,SAAQD,SAAS,CAACF,QAAD,EAAWC,QAAX,EAAqB,KAAKT,UAA1B,EAAsC,KAAKC,UAA3C,CAAjB;AACD,CAJD;;AAMAW,MAAM,CAACC,OAAP,GAAiBf,SAAjB","sourcesContent":["/*\n  Predicates for the Brill tagger\n  Copyright (C) 2019 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n'use strict'\n\nconst DEBUG = false\n\nconst predicates = require('./RuleTemplates')\nDEBUG && console.log('RuleSet loaded predicates: ' + predicates)\n\nfunction Predicate (name, parameter1, parameter2) {\n  this.name = name\n  this.meta = predicates[name]\n  if (!this.meta) {\n    this.meta = predicates.DEFAULT\n  }\n  // if (this.meta.nrParameters > 0) {\n  this.parameter1 = parameter1\n  // }\n  // if (this.meta.nrParameters > 1) {\n  this.parameter2 = parameter2\n  // }\n  DEBUG && console.log('Predicate\\n' + JSON.toString(this.meta, null, 2))\n}\n\nPredicate.prototype.evaluate = function (sentence, position) {\n  DEBUG && console.log('Predicate.evalute: ' + this.name)\n  const predicate = this.meta.function\n  return (predicate(sentence, position, this.parameter1, this.parameter2))\n}\n\nmodule.exports = Predicate\n"]},"metadata":{},"sourceType":"script"}