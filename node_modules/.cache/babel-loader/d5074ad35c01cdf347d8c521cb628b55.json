{"ast":null,"code":"/*\n  Element class for POS tagging\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n'use strict';\n\nvar util = require('util');\n\nvar Element = require('../Element');\n\nvar Feature = require('../Feature');\n\nfunction POSElement(a, b) {\n  POSElement.super_.call(this, a, b);\n}\n\nutil.inherits(POSElement, Element);\n\nPOSElement.prototype.generateFeatures = function (featureSet) {\n  var context = this.b.data;\n  var tag = this.a;\n  var token = context.wordWindow['0']; // Feature for the current word\n\n  function currentWord(x) {\n    if (x.b.data.wordWindow['0'] === token && x.a === tag) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  featureSet.addFeature(new Feature(currentWord, 'wordFeature', ['0', token, '0', tag])); // Feature for previous bigram (previous two tags), positions -2, -1\n\n  if (context.tagWindow['-2']) {\n    var prevBigram = function prevBigram(x) {\n      if (x.a === tag && x.b.data.tagWindow['-2'] === prevPrevTag && x.b.data.tagWindow['-1'] === prevTag) {\n        return 1;\n      }\n\n      return 0;\n    };\n\n    var prevPrevTag = context.tagWindow['-2'];\n    var prevTag = context.tagWindow['-1'];\n    featureSet.addFeature(new Feature(prevBigram, 'prevBigram', ['0', tag, '-2', prevPrevTag, '-1', prevTag]));\n  }\n  /*\n  // Feature for left bigram, positions -1, 0\n  if (context.tagWindow[\"-1\"]) {\n    var prevTag = context.tagWindow[\"-1\"];\n    function leftBigram(x) {\n      if ((x.b.data.tagWindow[\"-1\"] === prevTag) &&\n          (x.a === tag)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(leftBigram, \"leftBigram\", [\"0\", tag, \"-1\", prevTag]));\n  }\n  */\n\n  /*\n   // Feature for right bigram, positions 0, 1\n  if (context.tagWindow[\"1\"]) {\n    var nextTag = context.tagWindow[\"1\"];\n    function rightBigram(x) {\n      if ((x.a === tag) &&\n          (x.b.data.tagWindow[\"1\"] === nextTag)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(rightBigram, \"rightBigram\", [\"0\", tag, \"1\", nextTag]));\n  }\n  */\n\n  /*\n  // Feature for next bigram (next two tags), positions 1 and 2\n  if (context.tagWindow[\"2\"]) {\n    var nextTag = context.tagWindow[\"1\"];\n    var nextNextTag = context.tagWindow[\"2\"];\n    function nextBigram(x) {\n      if ((x.a === tag) &&\n          (x.b.data.tagWindow[\"1\"] === nextTag) &&\n          (x.b.data.tagWindow[\"2\"] === nextNextTag)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(nextBigram, \"nextBigram\", [\"0\", tag, \"1\", nextTag, \"2\", nextNextTag]));\n  }\n   // Feature that looks at the left bigram words\n  if (context.wordWindow[\"-1\"]) {\n    var prevWord = context.wordWindow[\"-1\"];\n    function leftBigramWords(x) {\n      if ((x.a === tag) &&\n          (x.b.data.wordWindow[\"0\"] === token) &&\n          (x.b.data.wordWindow[\"-1\"] === prevWord)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(leftBigramWords, \"leftBigramWords\", [\"0\", tag, \"0\", token, \"-1\", prevWord]));\n  }\n   // Feature that looks at the right bigram words\n  if (context.wordWindow[\"1\"]) {\n    var nextWord = context.wordWindow[\"1\"];\n    function rightBigramWords(x) {\n      if ((x.a === tag) &&\n          (x.b.data.wordWindow[\"0\"] === token) &&\n          (x.b.data.wordWindow[\"1\"] === nextWord)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(rightBigramWords, \"rightBigramWords\", [\"0\", tag, \"0\", token, \"1\", nextWord]));\n  }\n  */\n  // Feature that looks at the previous word and its category\n\n\n  if (context.wordWindow['-1']) {\n    var prevWordAndCat = function prevWordAndCat(x) {\n      if (x.a === tag && x.b.data.wordWindow['-1'] === prevWord && x.b.data.tagWindow['-1'] === _prevTag) {\n        return 1;\n      }\n\n      return 0;\n    };\n\n    var prevWord = context.wordWindow['-1'];\n    var _prevTag = context.tagWindow['-1'];\n    featureSet.addFeature(new Feature(prevWordAndCat, 'prevWordAndCat', ['0', tag, '-1', prevWord, '-1', _prevTag]));\n  }\n  /*\n    // Feature that looks at the next word and its category\n    if (context.wordWindow[\"1\"]) {\n      var nextWord = context.wordWindow[\"1\"];\n      var nextTag = context.tagWindow[\"1\"];\n      function nextWordAndCat(x) {\n        if ((x.a === tag) &&\n            (x.b.data.wordWindow[\"1\"] === nextWord) &&\n            (x.b.data.tagWindow[\"1\"] === nextTag)) {\n            return 1;\n          }\n        return 0;\n      }\n      featureSet.addFeature(new Feature(nextWordAndCat, \"nextWordAndCat\", [\"0\", tag, \"1\", nextWord, \"1\", nextTag]));\n    }\n  */\n\n};\n\nmodule.exports = POSElement;","map":{"version":3,"sources":["C:/CodingProjects/ABCspelet/node_modules/natural/lib/natural/classifiers/maxent/POS/POS_Element.js"],"names":["util","require","Element","Feature","POSElement","a","b","super_","call","inherits","prototype","generateFeatures","featureSet","context","data","tag","token","wordWindow","currentWord","x","addFeature","tagWindow","prevBigram","prevPrevTag","prevTag","prevWordAndCat","prevWord","module","exports"],"mappings":"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","sourcesContent":["/*\n  Element class for POS tagging\n  Copyright (C) 2018 Hugo W.L. ter Doest\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n'use strict'\n\nconst util = require('util')\nconst Element = require('../Element')\nconst Feature = require('../Feature')\n\nfunction POSElement (a, b) {\n  POSElement.super_.call(this, a, b)\n}\n\nutil.inherits(POSElement, Element)\n\nPOSElement.prototype.generateFeatures = function (featureSet) {\n  const context = this.b.data\n  const tag = this.a\n  const token = context.wordWindow['0']\n\n  // Feature for the current word\n  function currentWord (x) {\n    if ((x.b.data.wordWindow['0'] === token) &&\n        (x.a === tag)) {\n      return 1\n    }\n    return 0\n  }\n  featureSet.addFeature(new Feature(currentWord, 'wordFeature', ['0', token, '0', tag]))\n\n  // Feature for previous bigram (previous two tags), positions -2, -1\n  if (context.tagWindow['-2']) {\n    const prevPrevTag = context.tagWindow['-2']\n    const prevTag = context.tagWindow['-1']\n    function prevBigram (x) {\n      if ((x.a === tag) &&\n          (x.b.data.tagWindow['-2'] === prevPrevTag) &&\n          (x.b.data.tagWindow['-1'] === prevTag)) {\n        return 1\n      }\n      return 0\n    }\n    featureSet.addFeature(new Feature(prevBigram, 'prevBigram', ['0', tag, '-2', prevPrevTag, '-1', prevTag]))\n  }\n\n  /*\n  // Feature for left bigram, positions -1, 0\n  if (context.tagWindow[\"-1\"]) {\n    var prevTag = context.tagWindow[\"-1\"];\n    function leftBigram(x) {\n      if ((x.b.data.tagWindow[\"-1\"] === prevTag) &&\n          (x.a === tag)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(leftBigram, \"leftBigram\", [\"0\", tag, \"-1\", prevTag]));\n  }\n*/\n\n  /*\n\n  // Feature for right bigram, positions 0, 1\n  if (context.tagWindow[\"1\"]) {\n    var nextTag = context.tagWindow[\"1\"];\n    function rightBigram(x) {\n      if ((x.a === tag) &&\n          (x.b.data.tagWindow[\"1\"] === nextTag)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(rightBigram, \"rightBigram\", [\"0\", tag, \"1\", nextTag]));\n  }\n*/\n  /*\n  // Feature for next bigram (next two tags), positions 1 and 2\n  if (context.tagWindow[\"2\"]) {\n    var nextTag = context.tagWindow[\"1\"];\n    var nextNextTag = context.tagWindow[\"2\"];\n    function nextBigram(x) {\n      if ((x.a === tag) &&\n          (x.b.data.tagWindow[\"1\"] === nextTag) &&\n          (x.b.data.tagWindow[\"2\"] === nextNextTag)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(nextBigram, \"nextBigram\", [\"0\", tag, \"1\", nextTag, \"2\", nextNextTag]));\n  }\n\n  // Feature that looks at the left bigram words\n  if (context.wordWindow[\"-1\"]) {\n    var prevWord = context.wordWindow[\"-1\"];\n    function leftBigramWords(x) {\n      if ((x.a === tag) &&\n          (x.b.data.wordWindow[\"0\"] === token) &&\n          (x.b.data.wordWindow[\"-1\"] === prevWord)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(leftBigramWords, \"leftBigramWords\", [\"0\", tag, \"0\", token, \"-1\", prevWord]));\n  }\n\n  // Feature that looks at the right bigram words\n  if (context.wordWindow[\"1\"]) {\n    var nextWord = context.wordWindow[\"1\"];\n    function rightBigramWords(x) {\n      if ((x.a === tag) &&\n          (x.b.data.wordWindow[\"0\"] === token) &&\n          (x.b.data.wordWindow[\"1\"] === nextWord)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(rightBigramWords, \"rightBigramWords\", [\"0\", tag, \"0\", token, \"1\", nextWord]));\n  }\n*/\n\n  // Feature that looks at the previous word and its category\n  if (context.wordWindow['-1']) {\n    const prevWord = context.wordWindow['-1']\n    const prevTag = context.tagWindow['-1']\n    function prevWordAndCat (x) {\n      if ((x.a === tag) &&\n          (x.b.data.wordWindow['-1'] === prevWord) &&\n          (x.b.data.tagWindow['-1'] === prevTag)) {\n        return 1\n      }\n      return 0\n    }\n    featureSet.addFeature(new Feature(prevWordAndCat, 'prevWordAndCat', ['0', tag, '-1', prevWord, '-1', prevTag]))\n  }\n\n/*\n  // Feature that looks at the next word and its category\n  if (context.wordWindow[\"1\"]) {\n    var nextWord = context.wordWindow[\"1\"];\n    var nextTag = context.tagWindow[\"1\"];\n    function nextWordAndCat(x) {\n      if ((x.a === tag) &&\n          (x.b.data.wordWindow[\"1\"] === nextWord) &&\n          (x.b.data.tagWindow[\"1\"] === nextTag)) {\n          return 1;\n        }\n      return 0;\n    }\n    featureSet.addFeature(new Feature(nextWordAndCat, \"nextWordAndCat\", [\"0\", tag, \"1\", nextWord, \"1\", nextTag]));\n  }\n*/\n}\n\nmodule.exports = POSElement\n"]},"metadata":{},"sourceType":"script"}