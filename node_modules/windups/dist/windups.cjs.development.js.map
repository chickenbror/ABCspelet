{"version":3,"file":"windups.cjs.development.js","sources":["../src/Windup.ts","../src/react/Pace.tsx","../src/react/OnChar.tsx","../src/react/useWindup.ts","../src/react/renderWindup.tsx","../src/react/useWindupString.ts","../src/react/Pause.tsx","../src/react/WindupChildren.tsx","../src/react/CharWrapper.tsx","../src/react/Linebreaker.tsx","../src/react/Effect.tsx","../src/react/textFromChildren.ts"],"sourcesContent":["export type WindupMember<ElementType, MetadataType> =\n  | ElementType\n  | Windup<ElementType, MetadataType>;\nexport type Windup<ElementType, MetadataType> = [\n  Array<WindupMember<ElementType, MetadataType>>,\n  Array<WindupMember<ElementType, MetadataType>>,\n  MetadataType\n];\n\nexport function isPlayedWindup<ElementType, MetadataType>(\n  windup:\n    | PlayedWindup<ElementType, MetadataType>\n    | Windup<ElementType, MetadataType>\n): windup is PlayedWindup<ElementType, MetadataType> {\n  return windup.length === 2;\n}\n\nexport function memberIsWindup<ElementType, MetadataType>(\n  member: WindupMember<ElementType, MetadataType>\n): member is Windup<ElementType, MetadataType> {\n  // If it's not an array it can't be a windup\n  if (!Array.isArray(member)) {\n    return false;\n  }\n\n  // If it has less or more than three members it's not a windup\n  if (member.length !== 3) {\n    return false;\n  }\n\n  // If its first or second members are not arrays it's not a windup\n  if (!Array.isArray(member[0]) || !Array.isArray(member[1])) {\n    return false;\n  }\n\n  // Past here we just have to hope ElementType isn't a windup.\n  return true;\n}\n\nexport function windupFromString<MetadataType>(\n  str: string,\n  metadata: MetadataType\n): Windup<string, MetadataType> {\n  return [[], str.split(\"\"), metadata];\n}\n\nexport function newWindup<ElementType, MetadataType>(\n  arg: Array<WindupMember<ElementType, MetadataType>>,\n  metadata: MetadataType\n): Windup<ElementType, MetadataType> {\n  return [[], arg, metadata];\n}\n\nexport function isUnplayed<ElementType, MetadataType>(\n  windup: Windup<ElementType, MetadataType>\n): boolean {\n  const [played, remaining] = windup;\n\n  if (played.length > 0) {\n    return false;\n  }\n\n  return remaining.reduce((unplayed: boolean, member) => {\n    if (memberIsWindup(member))\n      if (memberIsWindup(windup) && unplayed) {\n        return isUnplayed<ElementType, MetadataType>(member);\n      }\n    return unplayed;\n  }, true);\n}\n\nexport function isFinished<ElementType, MetadataType>([\n  _played,\n  remaining\n]: Windup<ElementType, MetadataType>): boolean {\n  return remaining.length === 0;\n}\n\nexport function fastForward<ElementType, MetadataType>(\n  windup: Windup<ElementType, MetadataType>\n): Windup<ElementType, MetadataType> {\n  const forwardedWindup = next(windup);\n  if (isFinished(forwardedWindup)) {\n    return forwardedWindup;\n  }\n  return fastForward(forwardedWindup);\n}\n\nexport function rewind<ElementType, MetadataType>(\n  windup: Windup<ElementType, MetadataType>\n): Windup<ElementType, MetadataType> {\n  if (isUnplayed(windup)) {\n    return windup;\n  }\n\n  const [played, remaining, metadata] = windup;\n\n  type MemberType = WindupMember<ElementType, MetadataType>;\n\n  const mapRewind = (member: MemberType): MemberType => {\n    if (memberIsWindup(member)) {\n      return rewind(member);\n    }\n    return member;\n  };\n\n  return [\n    [],\n    [...played.map(mapRewind), ...remaining.map(mapRewind)],\n    metadata\n  ];\n}\n\nexport function windupAsString<MetadataType>(\n  windup: Windup<string, MetadataType>\n): string {\n  const [played, remaining] = windup;\n\n  type MemberType = WindupMember<string, MetadataType>;\n  const stringify = (member: MemberType): MemberType => {\n    if (memberIsWindup(member)) {\n      return windupAsString(member);\n    }\n    return member;\n  };\n  return [\n    played.map(stringify).join(\"\"),\n    remaining.map(stringify).join(\"\")\n  ].join(\"\");\n}\n\nexport function lastPlayedMember<ElementType, MetadataType>([\n  played,\n  remaining\n]: Windup<ElementType, MetadataType>):\n  | WindupMember<ElementType, MetadataType>\n  | undefined {\n  const playedFromRemaining = remaining.reduce(\n    (playedEl: WindupMember<ElementType, MetadataType> | undefined, member) => {\n      if (memberIsWindup(member)) {\n        if (!isUnplayed(member)) {\n          return lastPlayedElement(member);\n        }\n      }\n      return playedEl;\n    },\n    undefined\n  );\n\n  if (playedFromRemaining) {\n    return playedFromRemaining;\n  }\n\n  const last = played[played.length - 1];\n  return last;\n}\n\nexport function lastPlayedElement<ElementType, MetadataType>(\n  windup: Windup<ElementType, MetadataType>\n): ElementType | undefined {\n  const lastPlayed = lastPlayedMember(windup);\n\n  if (memberIsWindup(lastPlayed)) {\n    return lastPlayedElement(lastPlayed);\n  }\n\n  return lastPlayed;\n}\n\nexport type PlayedWindup<ElementType, MetadataType> = [\n  Array<ElementType>,\n  MetadataType\n];\n\nexport function playedElements<ElementType, MetadataType>([\n  played,\n  remaining\n]: Windup<ElementType, MetadataType>): Array<\n  ElementType | PlayedWindup<ElementType, MetadataType>\n> {\n  const playedTransformed = played.map(member => {\n    if (memberIsWindup(member)) {\n      const [, , metadata] = member;\n      return [playedElements(member), metadata] as PlayedWindup<\n        ElementType,\n        MetadataType\n      >;\n    }\n    return member;\n  });\n\n  const [firstRemaning] = remaining;\n  if (memberIsWindup(firstRemaning) && !isUnplayed(firstRemaning)) {\n    const [, , metadata] = firstRemaning;\n\n    return [\n      ...playedTransformed,\n      [playedElements(firstRemaning), metadata] as PlayedWindup<\n        ElementType,\n        MetadataType\n      >\n    ];\n  }\n\n  return playedTransformed;\n}\n\nexport function nextElement<ElementType, MetadataType>([\n  _played,\n  remaining\n]: Windup<ElementType, MetadataType>): ElementType | undefined {\n  const [nextVal] = remaining;\n\n  if (memberIsWindup(nextVal)) {\n    return nextElement(nextVal);\n  }\n\n  return nextVal;\n}\n\nexport function next<ElementType, MetadataType>(\n  windup: Windup<ElementType, MetadataType>\n): Windup<ElementType, MetadataType> {\n  // start\n  // [[], [[[], [\"h\", \"i\"]], [[], [\"n\", \"o\"]]]]\n\n  // next\n  // [[], [[[\"h\"], [\"i\"]], [\"\", [\"n\", \"o\"]]]]\n\n  // next\n  // [[\"h\", \"i\"], [[\"n\", \"o\"]]]\n\n  // next\n  // [[\"h\", \"i\"] [\"n\", \"o\"]], []]\n\n  if (isFinished(windup)) {\n    return windup;\n  }\n\n  const [played, remaining, metadata] = windup;\n  const [firstRemaining, ...restRemaining] = remaining;\n\n  if (memberIsWindup(firstRemaining)) {\n    const nextFirstRemaining = next(firstRemaining);\n\n    if (isFinished(nextFirstRemaining)) {\n      return [[...played, nextFirstRemaining], restRemaining, metadata];\n    }\n\n    return [played, [nextFirstRemaining, ...restRemaining], metadata];\n  }\n\n  return [[...played, firstRemaining], restRemaining, metadata];\n}\n","import * as React from \"react\";\nimport { isFinished, memberIsWindup, Windup } from \"../Windup\";\nimport { HookMetadata } from \"./useWindup\";\n\ntype MsProp = {\n  ms: number;\n};\n\ntype GetPaceProp = {\n  getPace: (char: string) => number;\n};\n\ntype PaceProps = MsProp | GetPaceProp;\n\nexport function defaultGetPace(\n  lastChar: string,\n  nextChar: string | undefined\n): number {\n  switch (lastChar) {\n    case \"—\":\n    case \"…\":\n      return 200;\n    case \".\":\n    case \",\":\n      return 150;\n    case \"?\":\n    case \"!\":\n      if (nextChar !== \"!\" && nextChar !== \"?\") {\n        return 150;\n      }\n      return 20;\n    case \"-\":\n    case \" \":\n    case \"\\n\":\n      return 0;\n    default:\n      return 20;\n  }\n}\n\nconst Pace: React.FC<PaceProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\nexport function isPaceElement(\n  element: React.ReactElement\n): element is React.ReactElement<PaceProps> {\n  return element.type === Pace;\n}\n\nexport function isMsProp(props: PaceProps): props is MsProp {\n  if (\"ms\" in props) {\n    return true;\n  }\n  return false;\n}\n\nexport function paceFromWindup<\n  M extends HookMetadata,\n  W extends Windup<string, M>\n>(\n  windup: W,\n  parentPace?: (char: string, nextChar: string | undefined) => number\n): ((char: string, nextChar: string | undefined) => number) | undefined {\n  if (isFinished(windup)) {\n    return undefined;\n  }\n\n  const [, remaining, metadata] = windup;\n\n  const [firstRemaining] = remaining;\n\n  if (firstRemaining && memberIsWindup(firstRemaining)) {\n    return paceFromWindup(firstRemaining, metadata.pace || parentPace);\n  }\n\n  return metadata.pace || parentPace;\n}\n\nexport default Pace;\n","import * as React from \"react\";\nimport {\n  memberIsWindup,\n  Windup,\n  lastPlayedMember,\n  isUnplayed\n} from \"../Windup\";\nimport { HookMetadata } from \"./useWindup\";\n\ntype OnCharProps = {\n  fn: (char: string) => void;\n};\n\nconst OnChar: React.FC<OnCharProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\nexport function isOnCharElement(\n  element: React.ReactElement\n): element is React.ReactElement<OnCharProps> {\n  return element.type === OnChar;\n}\n\n// Should return onChars from\n// every just played member that is a windup\n// any first remaining that is played\nexport function onCharsFromWindup<\n  M extends HookMetadata,\n  W extends Windup<string, M>\n>(windup: W): ((char: string) => void)[] {\n  const [, remaining, metadata] = windup;\n  const lastPlayed = lastPlayedMember(windup);\n  const [firstRemaining] = remaining;\n\n  let onChars = [];\n\n  if (lastPlayed && memberIsWindup(lastPlayed)) {\n    onChars.push(...onCharsFromWindup(lastPlayed));\n  }\n\n  if (\n    firstRemaining &&\n    memberIsWindup(firstRemaining) &&\n    !isUnplayed(firstRemaining)\n  ) {\n    onChars.push(...onCharsFromWindup(firstRemaining));\n  }\n\n  if (metadata.onChar) {\n    onChars.push(metadata.onChar);\n  }\n\n  return onChars;\n}\n\nexport default OnChar;\n","import * as React from \"react\";\nimport { defaultGetPace, paceFromWindup } from \"./Pace\";\nimport {\n  isFinished,\n  lastPlayedElement,\n  next,\n  fastForward,\n  rewind,\n  Windup,\n  nextElement\n} from \"../Windup\";\nimport { onCharsFromWindup } from \"./OnChar\";\n\ntype WindupReducerState<M> = {\n  windup: Windup<string, M>;\n  didFinishOnce: boolean;\n};\n\ntype WindupReducerAction<M> =\n  | {\n      type: \"replace\";\n      windup: Windup<string, M>;\n    }\n  | {\n      type: \"next\";\n    }\n  | {\n      type: \"rewind\";\n    }\n  | {\n      type: \"fast-forward\";\n    }\n  | {\n      type: \"finish\";\n    };\n\nfunction initWindupState<M>(windup: Windup<string, M>): WindupReducerState<M> {\n  return { windup, didFinishOnce: false };\n}\n\ntype ReducerType<M> = (\n  prevState: WindupReducerState<M>,\n  action: WindupReducerAction<M>\n) => WindupReducerState<M>;\n\nfunction windupReducer<M>(\n  state: WindupReducerState<M>,\n  action: WindupReducerAction<M>\n): WindupReducerState<M> {\n  switch (action.type) {\n    case \"replace\":\n      return initWindupState(action.windup);\n    case \"next\":\n      return { ...state, windup: next(state.windup) };\n    case \"rewind\":\n      return { windup: rewind(state.windup), didFinishOnce: false };\n    case \"fast-forward\":\n      return { ...state, windup: fastForward(state.windup) };\n    case \"finish\":\n      return { ...state, didFinishOnce: true };\n    default:\n      return state;\n  }\n}\n\nexport interface HookMetadata {\n  onChar?: (char: string) => void;\n  pace?: (char: string, nextChar: string | undefined) => number;\n}\n\nexport default function useWindup<M extends HookMetadata>(\n  windupInit: Windup<string, M>,\n  options: {\n    onFinished?: () => void;\n    skipped?: boolean;\n  }\n): {\n  windup: Windup<string, M>;\n  skip: () => void;\n  rewind: () => void;\n  isFinished: boolean;\n} {\n  const [{ windup, didFinishOnce }, dispatch] = React.useReducer<\n    ReducerType<M>,\n    Windup<string, M>\n  >(windupReducer, windupInit, initWindupState);\n\n  const timeoutRef = React.useRef<NodeJS.Timeout | null>(null);\n  const windupIsFinished = isFinished(windup);\n\n  const skip = React.useCallback(() => {\n    if (!windupIsFinished) {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n\n      dispatch({\n        type: \"fast-forward\"\n      });\n    }\n  }, [windupIsFinished]);\n\n  const rewind = React.useCallback(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    dispatch({ type: \"rewind\" });\n  }, []);\n\n  // If windup arg changes, we should reset\n  React.useEffect(() => {\n    dispatch({ type: \"replace\", windup: windupInit });\n  }, [windupInit]);\n\n  // If skipped is changes to true, we should skip\n  // And if it's changed to false, we should restart\n  React.useEffect(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    if (options.skipped) {\n      dispatch({\n        type: \"fast-forward\"\n      });\n    }\n    if (options.skipped === false) {\n      dispatch({ type: \"rewind\" });\n    }\n  }, [options.skipped]);\n\n  // When the windup changes, onChar should fire\n  React.useEffect(() => {\n    const onChars = onCharsFromWindup(windup);\n    const lastEl = lastPlayedElement(windup);\n    if (onChars.length > 0 && lastEl) {\n      onChars.forEach(onChar => {\n        onChar(lastEl);\n      });\n    }\n  }, [windup]);\n\n  // If windup finishes, the onFinished should fire\n  React.useEffect(() => {\n    // Put this in a new context so that the windup finishes visually before firing this\n    if (didFinishOnce === false && windupIsFinished) {\n      const timeout = setTimeout(() => {\n        if (options.onFinished) {\n          options.onFinished();\n        }\n        dispatch({ type: \"finish\" });\n      }, 0);\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [didFinishOnce, windupIsFinished, options]);\n\n  // the windup effect itself\n  React.useEffect(() => {\n    if (!windupIsFinished) {\n      const getPace = paceFromWindup(windup) || defaultGetPace;\n      const lastEl = lastPlayedElement(windup);\n      const nextEl = nextElement(windup);\n      timeoutRef.current = setTimeout(\n        () => {\n          dispatch({ type: \"next\" });\n        },\n        lastEl ? getPace(lastEl, nextEl) : 0\n      );\n      return () => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n      };\n    }\n  }, [windup, windupIsFinished]);\n\n  return {\n    windup,\n    skip,\n    rewind,\n    isFinished: windupIsFinished\n  };\n}\n","import * as React from \"react\";\nimport { ChildrenMetadata, ChildrenWindup } from \"./WindupChildren\";\nimport { PlayedWindup, playedElements, isPlayedWindup } from \"../Windup\";\nimport { StringMetadata, StringWindup } from \"./useWindupString\";\n\nexport type PlayedChildrenWindup = PlayedWindup<string, ChildrenMetadata>;\nexport type PlayedStringWindup = PlayedWindup<string, StringMetadata>;\n\nexport function renderStringWindup(\n  windup: StringWindup | PlayedStringWindup\n): string {\n  const played = isPlayedWindup(windup) ? windup[0] : playedElements(windup);\n\n  const inner = played.reduce((acc: string, playedEl) => {\n    if (typeof playedEl === \"string\") {\n      return acc + playedEl;\n    }\n\n    return acc + renderStringWindup(playedEl);\n  }, \"\");\n\n  return inner;\n}\n\nconst VOID_TAGS = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"command\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n];\n\nexport function renderChildrenWindup(\n  windup: ChildrenWindup | PlayedChildrenWindup\n): React.ReactNode {\n  const metadata = isPlayedWindup(windup) ? windup[1] : windup[2];\n  const played = isPlayedWindup(windup) ? windup[0] : playedElements(windup);\n\n  const Outer = metadata.element || React.Fragment;\n\n  if (metadata.props && Object.keys(metadata.props).includes(\"children\")) {\n    return <Outer key={metadata.key} {...metadata.props} />;\n  }\n\n  const inner = played.reduce((acc: React.ReactNode[], playedEl) => {\n    if (typeof playedEl === \"string\") {\n      const accButLast = acc.slice(0, acc.length - 1);\n      const last = acc[acc.length - 1];\n\n      return last && typeof last === \"string\"\n        ? [...accButLast, last + playedEl]\n        : [...acc, playedEl];\n    }\n\n    return [...acc, renderChildrenWindup(playedEl)];\n  }, []);\n\n  if (\n    typeof metadata.element === \"string\" &&\n    VOID_TAGS.includes(metadata.element)\n  ) {\n    return <Outer key={metadata.key} {...metadata.props} />;\n  }\n\n  return (\n    <Outer key={metadata.key} {...metadata.props}>\n      {inner}\n    </Outer>\n  );\n}\n","import * as React from \"react\";\nimport { windupFromString, Windup } from \"../Windup\";\nimport useWindup, { HookMetadata } from \"./useWindup\";\nimport { renderStringWindup } from \"./renderWindup\";\n\nexport type WindupOptions = {\n  onChar?: (char: string) => void;\n  onFinished?: () => void;\n  pace?: (char: string) => number;\n  skipped?: boolean;\n};\n\nexport type StringMetadata = HookMetadata;\n\nexport type StringWindup = Windup<string, StringMetadata>;\n\nexport default function useWindupString(\n  text: string,\n  options: WindupOptions = {}\n): [\n  string,\n  {\n    skip: () => void;\n    rewind: () => void;\n    isFinished: boolean;\n  }\n] {\n  const windupInit = React.useMemo(() => {\n    return windupFromString<StringMetadata>(text, options);\n    // We can omit options as this is used as an initialisation value and options will not change it\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text]);\n\n  const { windup, skip, rewind, isFinished } = useWindup(windupInit, options);\n\n  const rendered = renderStringWindup(windup);\n  React.useDebugValue(rendered);\n\n  return [rendered, { skip, rewind, isFinished }];\n}\n","import * as React from \"react\";\n\ntype PauseProps = {\n  ms: number;\n};\n\nconst Pause: React.FC<PauseProps> = () => {\n  return null;\n};\n\nexport function isPauseElement(\n  element: React.ReactElement\n): element is React.ReactElement<PauseProps> {\n  return element.type === Pause;\n}\n\nexport default Pause;\n","import * as React from \"react\";\nimport {\n  newWindup,\n  Windup,\n  WindupMember,\n  windupFromString,\n  memberIsWindup\n} from \"../Windup\";\nimport { isPaceElement, isMsProp } from \"./Pace\";\nimport { isOnCharElement } from \"./OnChar\";\nimport { isPauseElement } from \"./Pause\";\nimport useWindup, { HookMetadata } from \"./useWindup\";\nimport { renderChildrenWindup } from \"./renderWindup\";\n\nconst WindupContext = React.createContext({\n  skip: () => {\n    console.warn(\n      \"Tried to use the useSkip hook outside of a WindupChildren component!!\"\n    );\n  },\n  rewind: () => {\n    console.warn(\n      \"Tried to use the useRewind hook outside of a WindupChildren component!\"\n    );\n  },\n  isFinished: false\n});\n\nexport function useSkip() {\n  const { skip } = React.useContext(WindupContext);\n  return skip;\n}\n\nexport function useRewind() {\n  const { rewind } = React.useContext(WindupContext);\n  return rewind;\n}\n\nexport function useIsFinished() {\n  const { isFinished } = React.useContext(WindupContext);\n  return isFinished;\n}\n\nexport interface ChildrenMetadata extends HookMetadata {\n  element: React.ElementType | string | undefined;\n  props?: any;\n  ref?: any;\n  key?: string | number | null;\n}\n\nexport type ChildrenWindup = Windup<string, ChildrenMetadata>;\ntype ChildrenWindupMember = WindupMember<string, ChildrenMetadata>;\n\nfunction reduceWindupArgs(\n  prevArgs: ChildrenWindupMember[],\n  children: React.ReactNode\n) {\n  if (typeof children === \"string\") {\n    return [...prevArgs, ...children.split(\"\")];\n  }\n\n  if (typeof children === \"number\") {\n    return [...prevArgs, ...children.toString().split(\"\")];\n  }\n\n  if (!React.isValidElement(children)) {\n    return prevArgs;\n  }\n\n  const { children: childrenChildren, ...restProps } = children.props;\n\n  const paceMetaData = isPaceElement(children)\n    ? {\n        pace: (char: string) => {\n          if (isMsProp(children.props)) {\n            return children.props.ms;\n          }\n          return children.props.getPace(char);\n        }\n      }\n    : {};\n\n  const onCharMetaData = isOnCharElement(children)\n    ? {\n        onChar: children.props.fn\n      }\n    : {};\n\n  const keyProp = children.key ? { key: children.key } : {};\n\n  if (isPauseElement(children)) {\n    return [\n      ...prevArgs,\n      windupFromString<ChildrenMetadata>(\" \", {\n        element: React.Fragment,\n        ...keyProp,\n        props: { children: undefined },\n        pace: () => children.props.ms\n      })\n    ];\n  }\n\n  if (childrenChildren === undefined) {\n    return [\n      ...prevArgs,\n      windupFromString<ChildrenMetadata>(\" \", {\n        element: children.type,\n        props: { ...restProps, children: undefined },\n        ...keyProp,\n        ...paceMetaData,\n        ...onCharMetaData\n      })\n    ];\n  }\n\n  if (typeof childrenChildren === \"string\") {\n    return [\n      ...prevArgs,\n      windupFromString<ChildrenMetadata>(childrenChildren, {\n        element: children.type,\n        props: restProps,\n        ...keyProp,\n        ...paceMetaData,\n        ...onCharMetaData\n      })\n    ];\n  }\n\n  if (childrenChildren instanceof Function) {\n    return [\n      ...prevArgs,\n      windupFromString<ChildrenMetadata>(\" \", {\n        element: children.type,\n        props: { children: childrenChildren, ...restProps },\n        ...keyProp,\n        ...paceMetaData,\n        ...onCharMetaData\n      })\n    ];\n  }\n\n  const newArgs: ChildrenWindupMember[] = React.Children.toArray(\n    childrenChildren\n  ).reduce(reduceWindupArgs, []);\n\n  const argsWithMetadata = newArgs.map(member => {\n    if (memberIsWindup(member)) {\n      const [played, remaining, metadata] = member;\n      return [\n        played,\n        remaining,\n        {\n          ...paceMetaData,\n          ...onCharMetaData,\n          ...metadata\n        }\n      ] as ChildrenWindupMember;\n    }\n    return member;\n  });\n\n  return [\n    ...prevArgs,\n    newWindup<string, ChildrenMetadata>(argsWithMetadata, {\n      element: children.type,\n      props: restProps,\n      ...keyProp,\n      ...paceMetaData,\n      ...onCharMetaData\n    })\n  ];\n}\n\ntype WindupChildrenProps = {\n  onFinished?: () => void;\n  skipped?: boolean;\n};\n\nfunction buildKeyString(children: React.ReactNode): string {\n  if (children === null || children === undefined) {\n    return \"\";\n  }\n\n  const keys = React.Children.map(children, child => {\n    if (typeof child === \"string\") {\n      return child;\n    }\n\n    if (typeof child === \"number\") {\n      return child.toString();\n    }\n\n    if (React.isValidElement(child)) {\n      return `#${child.key || \"\"}<${buildKeyString(child.props.children)}>`;\n    }\n\n    return \"\";\n  });\n\n  if (!keys) {\n    return \"\";\n  }\n\n  return keys.join(\",\");\n}\n\nfunction useChildrenMemo<T>(factory: () => T, children: React.ReactNode) {\n  // Omitting children in favour of using a key instead\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoChildren = React.useMemo(factory, [buildKeyString(children)]);\n\n  return memoChildren;\n}\n\nconst WindupChildren: React.FC<WindupChildrenProps> = ({\n  children,\n  onFinished,\n  skipped\n}) => {\n  const windupInit = useChildrenMemo(() => {\n    return newWindup<string, ChildrenMetadata>(\n      React.Children.toArray(children).reduce(reduceWindupArgs, []),\n      { element: undefined }\n    );\n  }, children);\n\n  const { windup, skip, rewind, isFinished } = useWindup(windupInit, {\n    onFinished,\n    skipped\n  });\n\n  return (\n    <WindupContext.Provider\n      value={{\n        skip,\n        rewind,\n        isFinished\n      }}\n    >\n      {renderChildrenWindup(windup)}\n    </WindupContext.Provider>\n  );\n};\n\nexport default WindupChildren;\n","import * as React from \"react\";\n\ntype CharWrapperProps = {\n  element: React.ElementType;\n};\n\nfunction wrapChildren(children: React.ReactNode, Wrapper: React.ElementType) {\n  if (typeof children === \"string\") {\n    return children\n      .split(\"\")\n      .map((char, i) =>\n        char === \"\\n\" ? char : <Wrapper key={`${char}-${i}`}>{char}</Wrapper>\n      );\n  }\n\n  if (typeof children === \"number\") {\n    return children\n      .toString()\n      .split(\"\")\n      .map(char => <Wrapper>{char}</Wrapper>);\n  }\n\n  if (!React.isValidElement(children)) {\n    return <React.Fragment />;\n  }\n\n  if (children.props.children) {\n    const Outer = children.type;\n\n    if (children.props.children instanceof Function) {\n      return <Outer key={children.key} {...children.props} />;\n    }\n\n    return (\n      <Outer key={children.key} {...children.props}>\n        {React.Children.map(children.props.children, ch => {\n          return wrapChildren(ch, Wrapper);\n        })}\n      </Outer>\n    );\n  }\n\n  return children;\n}\n\nconst CharWrapper: React.FC<CharWrapperProps> = ({ children, element }) => {\n  return (\n    <>\n      {React.Children.map(children, ch => {\n        return wrapChildren(ch, element);\n      })}\n    </>\n  );\n};\n\nexport default CharWrapper;\n","import * as React from \"react\";\nimport breakLines from \"break-styled-lines\";\n\nfunction makeGetDescriptorsOfChildren(defaultFontStyle: string) {\n  return (\n    descriptors: { text: string; font: string }[],\n    children: React.ReactNode\n  ): { text: string; font: string }[] => {\n    if (typeof children === \"string\") {\n      return [...descriptors, { text: children, font: defaultFontStyle }];\n    }\n\n    if (typeof children === \"number\") {\n      return [\n        ...descriptors,\n        { text: children.toString(), font: defaultFontStyle }\n      ];\n    }\n\n    if (!React.isValidElement(children)) {\n      return descriptors;\n    }\n\n    if (\n      isStyledTextElement(children) &&\n      typeof children.props.children === \"string\"\n    ) {\n      return [\n        ...descriptors,\n        { text: children.props.children, font: children.props.fontStyle }\n      ];\n    }\n\n    if (isStyledTextElement(children)) {\n      return [\n        ...descriptors,\n        ...React.Children.toArray(children.props.children).reduce(\n          makeGetDescriptorsOfChildren(children.props.fontStyle),\n          []\n        )\n      ];\n    }\n\n    return [\n      ...descriptors,\n      ...React.Children.toArray(children.props.children).reduce(\n        makeGetDescriptorsOfChildren(defaultFontStyle),\n        []\n      )\n    ];\n  };\n}\n\nfunction reinsertStringsIntoChildren(\n  [accChildren, accStrings]: [React.ReactNode[], string[]],\n  children: React.ReactNode\n): [React.ReactNode[], string[]] {\n  if (typeof children === \"string\" || typeof children === \"number\") {\n    const [firstString, ...restStrings] = accStrings;\n    return [[...accChildren, firstString], restStrings];\n  }\n\n  if (!React.isValidElement(children)) {\n    return [accChildren, accStrings];\n  }\n\n  const [subChildrenAcc, subStringsAcc] = React.Children.toArray(\n    children.props.children\n  ).reduce(reinsertStringsIntoChildren, [[], accStrings]);\n\n  return [\n    [\n      ...accChildren,\n      React.cloneElement(children, {\n        children: subChildrenAcc\n      })\n    ],\n    subStringsAcc\n  ];\n}\n\ntype StyledTextProps = { children: React.ReactNode; fontStyle: string };\n\nfunction isStyledTextElement(\n  element: React.ReactElement\n): element is React.ReactElement<StyledTextProps> {\n  return element.type === StyledText;\n}\n\nexport function StyledText({ children }: StyledTextProps) {\n  return <>{children}</>;\n}\n\ntype LinebreakerProps = {\n  fontStyle: string;\n  width: number;\n};\n\nconst Linebreaker: React.FC<LinebreakerProps> = ({\n  children,\n  fontStyle,\n  width\n}) => {\n  // CAVEATS:\n  // fontStyle must match the font style of the characters inside\n  // non-character elements must not add width to the line.\n  // must be used OUTSIDE of WindupChildren component\n\n  const childrenArray = React.Children.toArray(children);\n  const descriptors = childrenArray.reduce(\n    makeGetDescriptorsOfChildren(fontStyle),\n    []\n  );\n\n  const transformedStrings = breakLines(descriptors, width, fontStyle);\n\n  const [\n    transformedChildren\n  ] = childrenArray.reduce(reinsertStringsIntoChildren, [\n    [],\n    transformedStrings\n  ]);\n\n  return <div style={{ whiteSpace: \"pre\" }}>{transformedChildren}</div>;\n};\n\nexport default Linebreaker;\n","import * as React from \"react\";\n\ntype EffectProps = {\n  fn: () => void;\n};\n\nconst Effect: React.FC<EffectProps> = ({ fn }) => {\n  React.useEffect(() => {\n    fn();\n    // We can safely omit fn from dependencies as if its value changes\n    // the whole windup will be re-rendered anyway\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return null;\n};\n\nexport default Effect;\n","import * as React from \"react\";\n\nexport default function textFromChildren(children: React.ReactNode): string {\n  const text = React.Children.map(children, ch => {\n    if (typeof ch === \"string\") {\n      return ch;\n    }\n\n    if (typeof ch === \"number\") {\n      return ch.toString();\n    }\n\n    if (!React.isValidElement(ch)) {\n      return \"\";\n    }\n\n    if (ch.props.children) {\n      return textFromChildren(ch.props.children);\n    }\n\n    return \"\";\n  });\n\n  if (!text) {\n    return \"\";\n  }\n\n  return text.join(\"\");\n}\n"],"names":["isPlayedWindup","windup","length","memberIsWindup","member","Array","isArray","windupFromString","str","metadata","split","newWindup","arg","isUnplayed","played","remaining","reduce","unplayed","isFinished","fastForward","forwardedWindup","next","rewind","mapRewind","map","lastPlayedMember","playedFromRemaining","playedEl","lastPlayedElement","undefined","last","lastPlayed","playedElements","playedTransformed","firstRemaning","nextElement","nextVal","firstRemaining","restRemaining","nextFirstRemaining","defaultGetPace","lastChar","nextChar","Pace","children","React","isPaceElement","element","type","isMsProp","props","paceFromWindup","parentPace","pace","OnChar","isOnCharElement","onCharsFromWindup","onChars","push","onChar","initWindupState","didFinishOnce","windupReducer","state","action","useWindup","windupInit","options","dispatch","timeoutRef","windupIsFinished","skip","current","clearTimeout","skipped","lastEl","forEach","timeout","setTimeout","onFinished","getPace","nextEl","renderStringWindup","inner","acc","VOID_TAGS","renderChildrenWindup","Outer","Object","keys","includes","key","accButLast","slice","useWindupString","text","rendered","Pause","isPauseElement","WindupContext","console","warn","useSkip","useRewind","useIsFinished","reduceWindupArgs","prevArgs","toString","childrenChildren","restProps","paceMetaData","char","ms","onCharMetaData","fn","keyProp","Function","newArgs","toArray","argsWithMetadata","buildKeyString","child","join","useChildrenMemo","factory","memoChildren","WindupChildren","Provider","value","wrapChildren","Wrapper","i","ch","CharWrapper","makeGetDescriptorsOfChildren","defaultFontStyle","descriptors","font","isStyledTextElement","fontStyle","reinsertStringsIntoChildren","accChildren","accStrings","firstString","restStrings","subChildrenAcc","subStringsAcc","StyledText","Linebreaker","width","childrenArray","transformedStrings","breakLines","transformedChildren","style","whiteSpace","Effect","textFromChildren"],"mappings":"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"}